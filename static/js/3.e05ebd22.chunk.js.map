{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/default_ava.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likeCount","href","likes","Button","size","variant","color","deleteBtn","onClick","deletePost","id","AddNewPostFormRedux","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","type","postBtn","MyPosts","React","memo","postsElements","posts","map","p","key","my_post","new_post","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Contact","contactTitle","contactValue","contactsItem","target","ProfileData","profile","isOwner","goToEditMode","contacts","rightSide","editButtonWrap","content_user_data","fullName","description","lookingForAJob","lookingForAJobDescription","aboutMe","socials","Object","keys","ProfileDataFormReduxForm","error","style","profileForm","formSummaryError","createField","Input","checkboxInput","contact","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatus","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","savePhoto","saveProfile","Preloader","main_img","content_info","leftSide","avaImg","photos","large","userPhoto","initialValues","formData","then","files","length","Profile","match","params","userId","ProfileContainer","this","authorizedUserId","history","push","setUserProfileThunk","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e05ebd22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_img\":\"ProfileInfo_main_img__2x_xT\",\"content_info\":\"ProfileInfo_content_info__xdDNc\",\"fullName\":\"ProfileInfo_fullName__3TdhZ\",\"leftSide\":\"ProfileInfo_leftSide__1G4La\",\"rightSide\":\"ProfileInfo_rightSide__2_kGX\",\"avaImg\":\"ProfileInfo_avaImg__2Q7sN\",\"socials\":\"ProfileInfo_socials__3TNxD\",\"editButtonWrap\":\"ProfileInfo_editButtonWrap__n7chz\",\"profileStatus\":\"ProfileInfo_profileStatus__2H27p\",\"form-group\":\"ProfileInfo_form-group__2RM9X\",\"contactsItem\":\"ProfileInfo_contactsItem__nS6pC\"};","module.exports = __webpack_public_path__ + \"static/media/default_ava.aca5023d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post\":\"MyPosts_my_post__2YUbR\",\"posts\":\"MyPosts_posts__IYZLC\",\"postBtn\":\"MyPosts_postBtn__fZxvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Afc4s\",\"likeCount\":\"Post_likeCount__GZwaK\",\"deleteBtn\":\"Post_deleteBtn__2DaV1\",\"likes\":\"Post_likes__1pjg8\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n            <div className={s.item}>\r\n                <img src=\"https://mdn.mozillademos.org/files/16631/favicon57.de33179910ae.1.1.png\" alt=\"\"/>\r\n                <span>\r\n                    {props.message}\r\n                </span>\r\n                <div className={s.likeCount}>\r\n                    <a href=\"#g\" className={s.likes}>Likes: {props.likeCount}</a>\r\n                   <Button size=\"small\" \r\n                           variant=\"outlined\" \r\n                           color=\"secondary\" \r\n                           className={s.deleteBtn}\r\n                           onClick={() => props.deletePost(props.id) }>\r\n                      Delete\r\n                   </Button>\r\n                </div>\r\n                \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React                        from 'react'\r\nimport {Field, reduxForm}           from \"redux-form\";\r\nimport s                            from './../MyPosts.module.css';\r\nimport {maxLengthCreator, required} from \"../../../../helpers/validators/validators.js\";\r\nimport {Textarea}                   from \"../../../common/FormsControls/FormControls.js\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea}\r\n                   name={'newPostText'}\r\n                   placeholder={'Enter your post'}/>\r\n\r\n\r\n         </div>\r\n         <div>\r\n            <button type=\"submit\" className={`${s.postBtn} btn btn-secondary`}>Add</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm({\r\n   form: 'profileAddNewPostForm'\r\n})(AddNewPostForm)","import React                 from 'react';\r\nimport s                     from './MyPosts.module.css';\r\nimport Post                  from \"./Post/Post\";\r\nimport {AddNewPostFormRedux} from \"./PostForm/PostForm.jsx\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n   let postsElements = props.posts.map(p => <Post key={p.id}\r\n                                                  id={p.id}\r\n                                                  deletePost={props.deletePost}\r\n                                                  message={p.message}\r\n                                                  likeCount={p.likeCount}/>)\r\n\r\n   let onAddPost = (values) => {\r\n      props.addPost(values.newPostText)\r\n   }\r\n\r\n   return (\r\n      <div className={s.my_post}>\r\n         <h4>My posts</h4>\r\n         <div className={s.new_post}>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n         </div>\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   );\r\n\r\n});\r\n\r\n\r\nexport default MyPosts;","import React        from 'react';\r\nimport {connect}    from \"react-redux\";\r\nimport MyPosts      from \"./MyPosts.jsx\";\r\nimport {addPost, deletePost}    from \"../../../redux/profile-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React                  from 'react';\r\nimport s                      from './../ProfileInfo.module.css';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <li className={s.contactsItem}>\r\n            <span>{contactTitle}</span> -\r\n            <a href={contactValue} target=\"_blank\">\r\n                {contactValue}\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default Contact;","import React   from 'react';\r\nimport Contact from \"./Contact/Contact\";\r\nimport s       from './ProfileInfo.module.css';\r\nimport Button    from '@material-ui/core/Button';\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    let contacts = profile.contacts;\r\n\r\n    return (\r\n        <div className={s.rightSide}>\r\n            {isOwner &&\r\n            <div className={s.editButtonWrap}>\r\n\r\n                <Button variant=\"outlined\" onClick={goToEditMode}>\r\n                    Edit\r\n                </Button>\r\n            </div>\r\n            }\r\n\r\n\r\n            <div className={s.content_user_data}>\r\n                <h2 className={`${s.fullName}`}>{profile.fullName}</h2>\r\n\r\n                <div>\r\n                    <div className={s.description}>\r\n                        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n                    </div>\r\n                    {\r\n                        profile.lookingForAJob &&\r\n                        <div className={s.description}>\r\n                            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        profile.aboutMe &&\r\n                        <div className={s.description}>\r\n                            <b>About me</b>: {profile.aboutMe}\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <ul className={s.socials}>\r\n                    {\r\n                        Object.keys(contacts).map(key => {\r\n                            if (contacts[key]) {\r\n                                return <Contact key={key}\r\n                                                contactTitle={key}\r\n                                                contactValue={contacts[key]}/>\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileData;","import React                          from \"react\";\r\nimport s                              from '../ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormControls.js\";\r\nimport {reduxForm}                    from \"redux-form\";\r\nimport style                          from \"../../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit} className={style.profileForm}>\r\n        <div>\r\n            <button className=\"btn btn-secondary\">save</button>\r\n        </div>\r\n        {error &&\r\n        <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div className={style.checkboxInput}>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState,useEffect} from 'react';\r\nimport s                           from '../ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    const [editMode, setEditMode] = useState(false);   \r\n    const [status, setStatus] = useState(props.status);\r\n    \r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n      \r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        \r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status<small>(dbl click to change)</small>: </b><span onDoubleClick={activateEditMode}>\r\n                    {props.status || 'Enter your status'}\r\n                </span>\r\n                </div>\r\n            \r\n            }\r\n            {editMode &&\r\n            <input autoFocus={true}\r\n                   onBlur={deactivateEditMode}\r\n                   onChange={onStatusChange}\r\n                   type=\"text\"\r\n                   value={status}/>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState}        from 'react';\r\nimport Preloader                from \"../../common/Preloader/Preloader\";\r\nimport ProfileData              from \"./ProfileData.jsx\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport s                        from './ProfileInfo.module.css';\r\nimport userPhoto                from '../../../assets/images/default_ava.jpg'\r\nimport ProfileStatusWithHooks   from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    \r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }    \r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        } \r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <img className={s.main_img}\r\n                 src=\"https://coolbackgrounds.io/images/backgrounds/index/sea-edge-79ab30e2.png\"\r\n                 alt=\"\"/>\r\n            <div className={s.content_info}>\r\n\r\n               {!editMode ?\r\n                  <div className={s.leftSide}>\r\n                     <img className={s.avaImg} src={profile.photos.large || userPhoto} alt=\"\"/>\r\n\r\n\r\n                  </div>\r\n                  :\r\n                  null\r\n\r\n               }\r\n               \r\n\r\n                \r\n\r\n                {editMode ?\r\n                    <ProfileDataFormReduxForm initialValues={profile} \r\n                                              profile={profile} \r\n                                              onSubmit={onSubmit}/>\r\n                    :\r\n                    <ProfileData profile={profile} \r\n                                 isOwner={isOwner}\r\n                                 updateStatus={updateStatus}\r\n                                 status={status}\r\n                                 goToEditMode={ () => {setEditMode(true)} }/>\r\n                  \r\n                }\r\n                \r\n               \r\n                \r\n               {isOwner && editMode &&\r\n               <div>\r\n                  <span><b>Change your photo</b></span>\r\n                  <input type={'file'} onChange={onMainPhotoSelected}/>\r\n               </div>\r\n               }\r\n              \r\n\r\n            </div>\r\n            <ProfileStatusWithHooks updateStatus={updateStatus}\r\n                                   status={status}/>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React            from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo      from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {  \r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={!props.match.params.userId}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n                         status={props.status}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React, {Component}                                                     from 'react';\r\nimport {connect}                                                              from \"react-redux\";\r\nimport {withRouter}                                                           from \"react-router-dom\";\r\nimport {compose}                                                              from \"redux\";\r\nimport {getStatus, savePhoto, saveProfile, setUserProfileThunk, updateStatus} from \"../../redux/profile-reducer.js\";\r\nimport Profile                                                                from \"./Profile.jsx\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.setUserProfileThunk(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     updateStatus={this.props.updateStatus}\r\n                     status={this.props.status}\r\n                     saveProfile={this.props.saveProfile}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfileThunk,\r\n            getStatus,\r\n            updateStatus,\r\n            saveProfile,\r\n            savePhoto\r\n        }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}