{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/default_ava.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Post","props","className","s","item","src","alt","message","likeCount","href","onClick","deletePost","id","maxLength50","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","key","my_post","new_post","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Contact","contactTitle","contactValue","target","ProfileData","profile","isOwner","goToEditMode","contacts","rightSide","content_user_data","fullName","description","lookingForAJob","lookingForAJobDescription","aboutMe","socials","keys","ProfileDataFormReduxForm","error","style","formSummaryError","createField","Input","type","contact","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","savePhoto","saveProfile","Preloader","main_img","content_info","leftSide","avaImg","photos","large","userPhoto","files","initialValues","formData","then","Profile","match","params","userId","ProfileContainer","this","authorizedUserId","history","setUserProfileThunk","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.33731af9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_img\":\"ProfileInfo_main_img__2x_xT\",\"content_info\":\"ProfileInfo_content_info__xdDNc\",\"fullName\":\"ProfileInfo_fullName__3TdhZ\",\"leftSide\":\"ProfileInfo_leftSide__1G4La\",\"rightSide\":\"ProfileInfo_rightSide__2_kGX\",\"avaImg\":\"ProfileInfo_avaImg__2Q7sN\",\"socials\":\"ProfileInfo_socials__3TNxD\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/default_ava.aca5023d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post\":\"MyPosts_my_post__2YUbR\",\"posts\":\"MyPosts_posts__IYZLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Afc4s\",\"likeCount\":\"Post_likeCount__GZwaK\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n            <div className={s.item}>\r\n                <img src=\"https://mdn.mozillademos.org/files/16631/favicon57.de33179910ae.1.1.png\" alt=\"\"/>\r\n                <span>\r\n                    {props.message}\r\n                </span>\r\n                <div className={s.likeCount}>\r\n                    <a href=\"#g\">{props.likeCount}</a>\r\n\r\n                    <button onClick={() => props.deletePost(props.id) }>Delete</button>\r\n                </div>\r\n                \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React                        from 'react'\r\nimport {Field, reduxForm}           from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../helpers/validators/validators.js\";\r\nimport {Textarea}                   from \"../../../common/FormsControls/FormControls.js\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={'newPostText'}\r\n                       placeholder={'Enter your post'}\r\n                       validate={[required, maxLength50]}/>       \r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm({\r\n    form: 'profileAddNewPostForm'\r\n})(AddNewPostForm)","import React from 'react';\r\nimport s                      from './MyPosts.module.css';\r\nimport Post                   from \"./Post/Post\";\r\nimport {AddNewPostFormRedux}  from \"./PostForm/PostForm.jsx\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id}\r\n                                                        id={p.id}\r\n                                                        deletePost={props.deletePost}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likeCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.my_post}>\r\n            <h3>My posts</h3>\r\n            <div className={s.new_post}>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n});\r\n\r\n\r\nexport default MyPosts;","import React        from 'react';\r\nimport {connect}    from \"react-redux\";\r\nimport MyPosts      from \"./MyPosts.jsx\";\r\nimport {addPost, deletePost}    from \"../../../redux/profile-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React                  from 'react';\r\nimport s                      from './../ProfileInfo.module.css';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <li>\r\n            <span>{contactTitle}</span> -\r\n            <a href={contactValue} target=\"_blank\">\r\n                {contactValue}\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default Contact;","import React   from 'react';\r\nimport Contact from \"./Contact/Contact\";\r\nimport s       from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    let contacts = profile.contacts;\r\n\r\n    return (\r\n        <div className={s.rightSide}>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>Edit</button>\r\n            </div>\r\n            }\r\n\r\n\r\n            <div className={s.content_user_data}>\r\n\r\n                <h2 className={s.fullName}>{profile.fullName}</h2>\r\n\r\n                <div>\r\n                    <div className={s.description}>\r\n                        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n                    </div>\r\n                    {\r\n                        profile.lookingForAJob &&\r\n                        <div className={s.description}>\r\n                            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        profile.aboutMe &&\r\n                        <div className={s.description}>\r\n                            <b>About me</b>: {profile.aboutMe}\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <ul className={s.socials}>\r\n                    {\r\n                        Object.keys(contacts).map(key => {\r\n                            if (contacts[key]) {\r\n                                return <Contact key={key}\r\n                                                contactTitle={key}\r\n                                                contactValue={contacts[key]}/>\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileData;","import React                          from \"react\";\r\nimport s                              from '../ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormControls.js\";\r\nimport {reduxForm}                    from \"redux-form\";\r\nimport style                          from \"../../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error &&\r\n        <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState,useEffect} from 'react';\r\nimport s                           from '../ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    const [editMode, setEditMode] = useState(false);   \r\n    const [status, setStatus] = useState(props.status);\r\n    \r\n    \r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n      \r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        \r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b><span onDoubleClick={activateEditMode}>\r\n                    {props.status || 'Enter your status'}\r\n                </span>\r\n                </div>\r\n            \r\n            }\r\n            {editMode &&\r\n            <input autoFocus={true}\r\n                   onBlur={deactivateEditMode}\r\n                   onChange={onStatusChange}\r\n                   type=\"text\"\r\n                   value={status}/>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState}        from 'react';\r\nimport Preloader                from \"../../common/Preloader/Preloader\";\r\nimport ProfileData              from \"./ProfileData.jsx\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport s                        from './ProfileInfo.module.css';\r\nimport userPhoto                from '../../../assets/images/default_ava.jpg'\r\nimport ProfileStatusWithHooks   from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    \r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }    \r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        } \r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <img className={s.main_img}\r\n                 src=\"https://coolbackgrounds.io/images/backgrounds/index/sea-edge-79ab30e2.png\"\r\n                 alt=\"\"/>\r\n            <div className={s.content_info}>\r\n\r\n\r\n                <div className={s.leftSide}>\r\n                    <img className={s.avaImg} src={profile.photos.large || userPhoto} alt=\"\"/>\r\n                </div>\r\n\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode ?\r\n                    <ProfileDataFormReduxForm initialValues={profile} \r\n                                              profile={profile} \r\n                                              onSubmit={onSubmit}/>\r\n                    :\r\n                    <ProfileData profile={profile} \r\n                                 isOwner={isOwner}\r\n                                 goToEditMode={ () => {setEditMode(true)} }/>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n            <ProfileStatusWithHooks updateStatus={updateStatus}\r\n                                    status={status}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React            from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo      from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {  \r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={!props.match.params.userId}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n                         status={props.status}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import React, {Component}                                                     from 'react';\r\nimport {connect}                                                              from \"react-redux\";\r\nimport {withRouter}                                                           from \"react-router-dom\";\r\nimport {compose}                                                              from \"redux\";\r\nimport {getStatus, savePhoto, saveProfile, setUserProfileThunk, updateStatus} from \"../../redux/profile-reducer.js\";\r\nimport Profile                                                                from \"./Profile.jsx\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.setUserProfileThunk(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     updateStatus={this.props.updateStatus}\r\n                     status={this.props.status}\r\n                     saveProfile={this.props.saveProfile}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfileThunk,\r\n            getStatus,\r\n            updateStatus,\r\n            saveProfile,\r\n            savePhoto\r\n        }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}